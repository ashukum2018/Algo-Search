Given an integer n, return the number of trailing zeroes in n!. Note that n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1. <br><h4>Example 1:</h4> <br><h4>Input:</h4> n = 3 <br><h4>Output:</h4> 0 <br><h4>Explanation:</h4> 3! = 6, no trailing zero. <br><h4>Example 2:</h4> <br><h4>Input:</h4> n = 5 <br><h4>Output:</h4> 1 <br><h4>Explanation:</h4> 5! = 120, one trailing zero. <br><h4>Example 3:</h4> <br><h4>Input:</h4> n = 0 <br><h4>Output:</h4> 0 <br><h4>Constraints:</h4> 0 <= n <= 104 Follow up:</h4> Could you write a solution that works in logarithmic time complexity?