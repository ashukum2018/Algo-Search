Given a sorted integer array nums and an integer n, add/patch elements to the array such that any number in the range [1, n] inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [1,3], n = 6 <br><h4>Output:</h4> 1 <br><h4>Explanation:</h4> Combinations of nums are [1], [3], [1,3], which form possible sums of:</h4> 1, 3, 4. Now if we add/patch 2 to nums, the combinations are:</h4> [1], [2], [3], [1,3], [2,3], [1,2,3]. Possible sums are 1, 2, 3, 4, 5, 6, which now covers the range [1, 6]. So we only need 1 patch. <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [1,5,10], n = 20 <br><h4>Output:</h4> 2 <br><h4>Explanation:</h4> The two patches can be [2, 4]. <br><h4>Example 3:</h4> <br><h4>Input:</h4> nums = [1,2,2], n = 5 <br><h4>Output:</h4> 0 <br><h4>Constraints:</h4> 1 <= nums.length <= 1000 1 <= nums[i] <= 104 nums is sorted in ascending order. 1 <= n <= 231 - 1