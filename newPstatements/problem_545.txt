Given two strings a and b, return the minimum number of times you should repeat string a so that string b is a substring of it. If it is impossible for b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b to be a substring of a after repeating it, return -1. Notice:</h4> string "abc" repeated 0 times is "", repeated 1 time is "abc" and repeated 2 times is "abcabc". <br><h4>Example 1:</h4> <br><h4>Input:</h4> a = "abcd", b = "cdabcdab" <br><h4>Output:</h4> 3 <br><h4>Explanation:</h4> We return 3 because by repeating a three times "abcdabcdabcd", b is a substring of it. <br><h4>Example 2:</h4> <br><h4>Input:</h4> a = "a", b = "aa" <br><h4>Output:</h4> 2 <br><h4>Constraints:</h4> 1 <= a.length, b.length <= 104 a and b consist of lowercase English letters.