Given two strings text1 and text2, return the length of their longest common subsequence. If there is no common subsequence, return 0. A subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters. For example, "ace" is a subsequence of "abcde". A common subsequence of two strings is a subsequence that is common to both strings. <br><h4>Example 1:</h4> <br><h4>Input:</h4> text1 = "abcde", text2 = "ace" <br><h4>Output:</h4> 3 <br><h4>Explanation:</h4> The longest common subsequence is "ace" and its length is 3. <br><h4>Example 2:</h4> <br><h4>Input:</h4> text1 = "abc", text2 = "abc" <br><h4>Output:</h4> 3 <br><h4>Explanation:</h4> The longest common subsequence is "abc" and its length is 3. <br><h4>Example 3:</h4> <br><h4>Input:</h4> text1 = "abc", text2 = "def" <br><h4>Output:</h4> 0 <br><h4>Explanation:</h4> There is no such common subsequence, so the result is 0. <br><h4>Constraints:</h4> 1 <= text1.length, text2.length <= 1000 text1 and text2 consist of only lowercase English characters.