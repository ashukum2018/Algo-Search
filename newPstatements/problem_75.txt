Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:</h4> Integers in each row are sorted from left to right. The first integer of each row is greater than the last integer of the previous row. <br><h4>Example 1:</h4> <br><h4>Input:</h4> matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3 <br><h4>Output:</h4> true <br><h4>Example 2:</h4> <br><h4>Input:</h4> matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13 <br><h4>Output:</h4> false <br><h4>Constraints:</h4> m == matrix.length n == matrix[i].length 1 <= m, n <= 100 -104 <= matrix[i][j], target <= 104