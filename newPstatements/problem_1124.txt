Given the array queries of positive integers between 1 and m, you have to process all queries[i] (from i=0 to i=queries.length-1) according to the following rules:</h4> In the beginning, you have the permutation P=[1,2,3,...,m]. For the current i, find the position of queries[i] in the permutation P (indexing from 0) and then move this at the beginning of the permutation P. Notice that the position of queries[i] in P is the result for queries[i]. Return an array containing the result for the given queries. <br><h4>Example 1:</h4> <br><h4>Input:</h4> queries = [3,1,2,1], m = 5 <br><h4>Output:</h4> [2,1,2,1] <br><h4>Explanation:</h4> The queries are processed as follow:</h4> For i=0:</h4> queries[i]=3, P=[1,2,3,4,5], position of 3 in P is 2, then we move 3 to the beginning of P resulting in P=[3,1,2,4,5]. For i=1:</h4> queries[i]=1, P=[3,1,2,4,5], position of 1 in P is 1, then we move 1 to the beginning of P resulting in P=[1,3,2,4,5]. For i=2:</h4> queries[i]=2, P=[1,3,2,4,5], position of 2 in P is 2, then we move 2 to the beginning of P resulting in P=[2,1,3,4,5]. For i=3:</h4> queries[i]=1, P=[2,1,3,4,5], position of 1 in P is 1, then we move 1 to the beginning of P resulting in P=[1,2,3,4,5]. Therefore, the array containing the result is [2,1,2,1]. <br><h4>Example 2:</h4> <br><h4>Input:</h4> queries = [4,1,2,2], m = 4 <br><h4>Output:</h4> [3,1,2,0] <br><h4>Example 3:</h4> <br><h4>Input:</h4> queries = [7,5,5,8,3], m = 8 <br><h4>Output:</h4> [6,5,0,7,5] <br><h4>Constraints:</h4> 1 <= m <= 10^3 1 <= queries.length <= m 1 <= queries[i] <= m