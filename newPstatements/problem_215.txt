Given the root of a complete binary tree, return the number of the nodes in the tree. According to Wikipedia, every level, except possibly the last, is completely filled in a complete binary tree, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h. Design an algorithm that runs in less than O(n) time complexity. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root = [1,2,3,4,5,6] <br><h4>Output:</h4> 6 <br><h4>Example 2:</h4> <br><h4>Input:</h4> root = [] <br><h4>Output:</h4> 0 <br><h4>Example 3:</h4> <br><h4>Input:</h4> root = [1] <br><h4>Output:</h4> 1 <br><h4>Constraints:</h4> The number of nodes in the tree is in the range [0, 5 * 104]. 0 <= Node.val <= 5 * 104 The tree is guaranteed to be complete.