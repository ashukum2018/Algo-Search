Given two strings:</h4> s1 and s2 with the same size, check if some permutation of string s1 can break some permutation of string s2 or vice-versa. In other words s2 can break s1 or vice-versa. A string x can break string y (both of size n) if x[i] >= y[i] (in alphabetical order) for all i between 0 and n-1. <br><h4>Example 1:</h4> <br><h4>Input:</h4> s1 = "abc", s2 = "xya" <br><h4>Output:</h4> true <br><h4>Explanation:</h4> "ayx" is a permutation of s2="xya" which can break to string "abc" which is a permutation of s1="abc". <br><h4>Example 2:</h4> <br><h4>Input:</h4> s1 = "abe", s2 = "acd" <br><h4>Output:</h4> false <br><h4>Explanation:</h4> All permutations for s1="abe" are:</h4> "abe", "aeb", "bae", "bea", "eab" and "eba" and all permutation for s2="acd" are:</h4> "acd", "adc", "cad", "cda", "dac" and "dca". However, there is not any permutation from s1 which can break some permutation from s2 and vice-versa. <br><h4>Example 3:</h4> <br><h4>Input:</h4> s1 = "leetcodee", s2 = "interview" <br><h4>Output:</h4> true <br><h4>Constraints:</h4> s1.length == n s2.length == n 1 <= n <= 10^5 All strings consist of lowercase English letters.