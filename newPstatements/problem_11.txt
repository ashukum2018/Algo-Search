Given an input string s and a pattern p, implement regular expression matching with support for \'.\' and \'*\' where:</h4> \'.\' Matches any single character.\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b\xe2\x80\x8b \'*\' Matches zero or more of the preceding element. The matching should cover the entire input string (not partial). <br><h4>Example 1:</h4> <br><h4>Input:</h4> s = "aa", p = "a" <br><h4>Output:</h4> false <br><h4>Explanation:</h4> "a" does not match the entire string "aa". <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = "aa", p = "a*" <br><h4>Output:</h4> true <br><h4>Explanation:</h4> \'*\' means zero or more of the preceding element, \'a\'. Therefore, by repeating \'a\' once, it becomes "aa". <br><h4>Example 3:</h4> <br><h4>Input:</h4> s = "ab", p = ".*" <br><h4>Output:</h4> true <br><h4>Explanation:</h4> ".*" means "zero or more (*) of any character (.)". <br><h4>Constraints:</h4> 1 <= s.length <= 20 1 <= p.length <= 30 s contains only lowercase English letters. p contains only lowercase English letters, \'.\', and \'*\'. It is guaranteed for each appearance of the character \'*\', there will be a previous valid character to match.