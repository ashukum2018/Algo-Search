Given a string s, determine if it is valid. A string s is valid if, starting with an empty string t = "", you can transform t into s after performing the following operation any number of times:</h4> Insert string "abc" into any position in t. More formally, t becomes tleft + "abc" + tright, where t == tleft + tright. Note that tleft and tright may be empty. Return true if s is a valid string, otherwise, return false. <br><h4>Example 1:</h4> <br><h4>Input:</h4> s = "aabcbc" <br><h4>Output:</h4> true <br><h4>Explanation:</h4> "" -> "abc" -> "aabcbc" Thus, "aabcbc" is valid. <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = "abcabcababcc" <br><h4>Output:</h4> true <br><h4>Explanation:</h4> "" -> "abc" -> "abcabc" -> "abcabcabc" -> "abcabcababcc" Thus, "abcabcababcc" is valid. <br><h4>Example 3:</h4> <br><h4>Input:</h4> s = "abccba" <br><h4>Output:</h4> false <br><h4>Explanation:</h4> It is impossible to get "abccba" using the operation. <br><h4>Constraints:</h4> 1 <= s.length <= 2 * 104 s consists of letters \'a\', \'b\', and \'c\'