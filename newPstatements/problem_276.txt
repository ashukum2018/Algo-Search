Given an integer array nums and two integers lower and upper, return the number of range sums that lie in [lower, upper] inclusive. Range sum S(i, j) is defined as the sum of the elements in nums between indices i and j inclusive, where i <= j. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [-2,5,-1], lower = -2, upper = 2 <br><h4>Output:</h4> 3 <br><h4>Explanation:</h4> The three ranges are:</h4> [0,0], [2,2], and [0,2] and their respective sums are:</h4> -2, -1, 2. <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [0], lower = 0, upper = 0 <br><h4>Output:</h4> 1 <br><h4>Constraints:</h4> 1 <= nums.length <= 105 -231 <= nums[i] <= 231 - 1 -105 <= lower <= upper <= 105 The answer is guaranteed to fit in a 32-bit integer.