You are given a string s that consists of lower case English letters and brackets. Reverse the strings in each pair of matching parentheses, starting from the innermost one. Your result should not contain any brackets. <br><h4>Example 1:</h4> <br><h4>Input:</h4> s = "(abcd)" <br><h4>Output:</h4> "dcba" <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = "(u(love)i)" <br><h4>Output:</h4> "iloveu" <br><h4>Explanation:</h4> The substring "love" is reversed first, then the whole string is reversed. <br><h4>Example 3:</h4> <br><h4>Input:</h4> s = "(ed(et(oc))el)" <br><h4>Output:</h4> "leetcode" <br><h4>Explanation:</h4> First, we reverse the substring "oc", then "etco", and finally, the whole string. <br><h4>Constraints:</h4> 1 <= s.length <= 2000 s only contains lower case English characters and parentheses. It is guaranteed that all parentheses are balanced.