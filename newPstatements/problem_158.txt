A peak element is an element that is strictly greater than its neighbors. Given an integer array nums, find a peak element, and return its index. If the array contains multiple peaks, return the index to any of the peaks. You may imagine that nums[-1] = nums[n] = -\xe2\x88\x9e. You must write an algorithm that runs in O(log n) time. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [1,2,3,1] <br><h4>Output:</h4> 2 <br><h4>Explanation:</h4> 3 is a peak element and your function should return the index number 2. <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [1,2,1,3,5,6,4] <br><h4>Output:</h4> 5 <br><h4>Explanation:</h4> Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6. <br><h4>Constraints:</h4> 1 <= nums.length <= 1000 -231 <= nums[i] <= 231 - 1 nums[i] != nums[i + 1] for all valid i.