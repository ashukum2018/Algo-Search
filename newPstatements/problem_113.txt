Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum. A leaf is a node with no children. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22 <br><h4>Output:</h4> true <br><h4>Explanation:</h4> The root-to-leaf path with the target sum is shown. <br><h4>Example 2:</h4> <br><h4>Input:</h4> root = [1,2,3], targetSum = 5 <br><h4>Output:</h4> false <br><h4>Explanation:</h4> There two root-to-leaf paths in the tree:</h4> (1 --> 2):</h4> The sum is 3. (1 --> 3):</h4> The sum is 4. There is no root-to-leaf path with sum = 5. <br><h4>Example 3:</h4> <br><h4>Input:</h4> root = [], targetSum = 0 <br><h4>Output:</h4> false <br><h4>Explanation:</h4> Since the tree is empty, there are no root-to-leaf paths. <br><h4>Constraints:</h4> The number of nodes in the tree is in the range [0, 5000]. -1000 <= Node.val <= 1000 -1000 <= targetSum <= 1000