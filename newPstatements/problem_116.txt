Given two strings s and t, return the number of distinct subsequences of s which equals t. A string\'s subsequence is a new string formed from the original string by deleting some (can be none) of the characters without disturbing the remaining characters\' relative positions. (i.e., "ACE" is a subsequence of "ABCDE" while "AEC" is not). The test cases are generated so that the answer fits on a 32-bit signed integer. <br><h4>Example 1:</h4> <br><h4>Input:</h4> s = "rabbbit", t = "rabbit" <br><h4>Output:</h4> 3 <br><h4>Explanation:</h4> As shown below, there are 3 ways you can generate "rabbit" from S. rabbbit rabbbit rabbbit <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = "babgbag", t = "bag" <br><h4>Output:</h4> 5 <br><h4>Explanation:</h4> As shown below, there are 5 ways you can generate "bag" from S. babgbag babgbag babgbag babgbag babgbag <br><h4>Constraints:</h4> 1 <= s.length, t.length <= 1000 s and t consist of English letters.