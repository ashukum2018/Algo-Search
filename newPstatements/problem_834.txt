You are given a binary array nums and an integer k. A k-bit flip is choosing a subarray of length k from nums and simultaneously changing every 0 in the subarray to 1, and every 1 in the subarray to 0. Return the minimum number of k-bit flips required so that there is no 0 in the array. If it is not possible, return -1. A subarray is a contiguous part of an array. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [0,1,0], k = 1 <br><h4>Output:</h4> 2 <br><h4>Explanation:</h4> Flip nums[0], then flip nums[2]. <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [1,1,0], k = 2 <br><h4>Output:</h4> -1 <br><h4>Explanation:</h4> No matter how we flip subarrays of size 2, we cannot make the array become [1,1,1]. <br><h4>Example 3:</h4> <br><h4>Input:</h4> nums = [0,0,0,1,0,1,1,0], k = 3 <br><h4>Output:</h4> 3 <br><h4>Explanation:</h4> Flip nums[0],nums[1],nums[2]:</h4> nums becomes [1,1,1,1,0,1,1,0] Flip nums[4],nums[5],nums[6]:</h4> nums becomes [1,1,1,1,1,0,0,0] Flip nums[5],nums[6],nums[7]:</h4> nums becomes [1,1,1,1,1,1,1,1] <br><h4>Constraints:</h4> 1 <= nums.length <= 105 1 <= k <= nums.length