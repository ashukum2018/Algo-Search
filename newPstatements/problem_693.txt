Strings s1 and s2 are k-similar (for some non-negative integer k) if we can swap the positions of two letters in s1 exactly k times so that the resulting string equals s2. Given two anagrams s1 and s2, return the smallest k for which s1 and s2 are k-similar. <br><h4>Example 1:</h4> <br><h4>Input:</h4> s1 = "ab", s2 = "ba" <br><h4>Output:</h4> 1 <br><h4>Example 2:</h4> <br><h4>Input:</h4> s1 = "abc", s2 = "bca" <br><h4>Output:</h4> 2 <br><h4>Constraints:</h4> 1 <= s1.length <= 20 s2.length == s1.length s1 and s2 contain only lowercase letters from the set {\'a\', \'b\', \'c\', \'d\', \'e\', \'f\'}. s2 is an anagram of s1.