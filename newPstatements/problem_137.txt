Given a non-empty array of integers nums, every element appears twice except for one. Find that single one. You must implement a solution with a linear runtime complexity and use only constant extra space. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [2,2,1] <br><h4>Output:</h4> 1 <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [4,1,2,1,2] <br><h4>Output:</h4> 4 <br><h4>Example 3:</h4> <br><h4>Input:</h4> nums = [1] <br><h4>Output:</h4> 1 <br><h4>Constraints:</h4> 1 <= nums.length <= 3 * 104 -3 * 104 <= nums[i] <= 3 * 104 Each element in the array appears twice except for one element which appears only once.