Given an integer array nums, return true if there exists a triple of indices (i, j, k) such that i < j < k and nums[i] < nums[j] < nums[k]. If no such indices exists, return false. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [1,2,3,4,5] <br><h4>Output:</h4> true <br><h4>Explanation:</h4> Any triplet where i < j < k is valid. <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [5,4,3,2,1] <br><h4>Output:</h4> false <br><h4>Explanation:</h4> No triplet exists. <br><h4>Example 3:</h4> <br><h4>Input:</h4> nums = [2,1,5,0,4,6] <br><h4>Output:</h4> true <br><h4>Explanation:</h4> The triplet (3, 4, 5) is valid because nums[3] == 0 < nums[4] == 4 < nums[5] == 6. <br><h4>Constraints:</h4> 1 <= nums.length <= 5 * 105 -231 <= nums[i] <= 231 - 1 Follow up:</h4> Could you implement a solution that runs in O(n) time complexity and O(1) space complexity?