Given an integer array nums, return the third distinct maximum number in this array. If the third maximum does not exist, return the maximum number. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [3,2,1] <br><h4>Output:</h4> 1 <br><h4>Explanation:</h4> The first distinct maximum is 3. The second distinct maximum is 2. The third distinct maximum is 1. <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [1,2] <br><h4>Output:</h4> 2 <br><h4>Explanation:</h4> The first distinct maximum is 2. The second distinct maximum is 1. The third distinct maximum does not exist, so the maximum (2) is returned instead. <br><h4>Example 3:</h4> <br><h4>Input:</h4> nums = [2,2,3,1] <br><h4>Output:</h4> 1 <br><h4>Explanation:</h4> The first distinct maximum is 3. The second distinct maximum is 2 (both 2's are counted together since they have the same value). The third distinct maximum is 1. <br><h4>Constraints:</h4> 1 <= nums.length <= 104 -231 <= nums[i] <= 231 - 1 Follow up:</h4> Can you find an O(n) solution?