We define the string s to be the infinite wraparound string of "abcdefghijklmnopqrstuvwxyz", so s will look like this:</h4> "...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....". Given a string p, return the number of unique non-empty substrings of p are present in s. <br><h4>Example 1:</h4> <br><h4>Input:</h4> p = "a" <br><h4>Output:</h4> 1 <br><h4>Explanation:</h4> Only the substring "a" of p is in s. <br><h4>Example 2:</h4> <br><h4>Input:</h4> p = "cac" <br><h4>Output:</h4> 2 <br><h4>Explanation:</h4> There are two substrings ("a", "c") of p in s. <br><h4>Example 3:</h4> <br><h4>Input:</h4> p = "zab" <br><h4>Output:</h4> 6 <br><h4>Explanation:</h4> There are six substrings ("z", "a", "b", "za", "ab", and "zab") of p in s. <br><h4>Constraints:</h4> 1 <= p.length <= 105 p consists of lowercase English letters.