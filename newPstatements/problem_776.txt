You are given an array of logs. Each log is a space-delimited string of words, where the first word is the identifier. There are two types of logs:</h4> Letter-logs:</h4> All words (except the identifier) consist of lowercase English letters. Digit-logs:</h4> All words (except the identifier) consist of digits. Reorder these logs so that:</h4> The letter-logs come before all digit-logs. The letter-logs are sorted lexicographically by their contents. If their contents are the same, then sort them lexicographically by their identifiers. The digit-logs maintain their relative ordering. Return the final order of the logs. <br><h4>Example 1:</h4> <br><h4>Input:</h4> logs = ["dig1 8 1 5 1","let1 art can","dig2 3 6","let2 own kit dig","let3 art zero"] <br><h4>Output:</h4> ["let1 art can","let3 art zero","let2 own kit dig","dig1 8 1 5 1","dig2 3 6"] <br><h4>Explanation:</h4> The letter-log contents are all different, so their ordering is "art can", "art zero", "own kit dig". The digit-logs have a relative order of "dig1 8 1 5 1", "dig2 3 6". <br><h4>Example 2:</h4> <br><h4>Input:</h4> logs = ["a1 9 2 3 1","g1 act car","zo4 4 7","ab1 off key dog","a8 act zoo"] <br><h4>Output:</h4> ["g1 act car","a8 act zoo","ab1 off key dog","a1 9 2 3 1","zo4 4 7"] <br><h4>Constraints:</h4> 1 <= logs.length <= 100 3 <= logs[i].length <= 100 All the tokens of logs[i] are separated by a single space. logs[i] is guaranteed to have an identifier and at least one word after the identifier.