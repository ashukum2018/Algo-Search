Given two integer arrays pushed and popped each with distinct values, return true if this could have been the result of a sequence of push and pop operations on an initially empty stack, or false otherwise. <br><h4>Example 1:</h4> <br><h4>Input:</h4> pushed = [1,2,3,4,5], popped = [4,5,3,2,1] <br><h4>Output:</h4> true <br><h4>Explanation:</h4> We might do the following sequence:</h4> push(1), push(2), push(3), push(4), pop() -> 4, push(5), pop() -> 5, pop() -> 3, pop() -> 2, pop() -> 1 <br><h4>Example 2:</h4> <br><h4>Input:</h4> pushed = [1,2,3,4,5], popped = [4,3,5,1,2] <br><h4>Output:</h4> false <br><h4>Explanation:</h4> 1 cannot be popped before 2. <br><h4>Constraints:</h4> 1 <= pushed.length <= 1000 0 <= pushed[i] <= 1000 All the elements of pushed are unique. popped.length == pushed.length popped is a permutation of pushed.