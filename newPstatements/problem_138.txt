Given an integer array nums where every element appears three times except for one, which appears exactly once. Find the single element and return it. You must implement a solution with a linear runtime complexity and use only constant extra space. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [2,2,3,2] <br><h4>Output:</h4> 3 <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [0,1,0,1,0,1,99] <br><h4>Output:</h4> 99 <br><h4>Constraints:</h4> 1 <= nums.length <= 3 * 104 -231 <= nums[i] <= 231 - 1 Each element in nums appears exactly three times except for one element which appears once.