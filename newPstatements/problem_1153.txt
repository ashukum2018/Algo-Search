Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X. Return the number of good nodes in the binary tree. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root = [3,1,4,3,null,1,5] <br><h4>Output:</h4> 4 <br><h4>Explanation:</h4> Nodes in blue are good. Root Node (3) is always a good node. Node 4 -> (3,4) is the maximum value in the path starting from the root. Node 5 -> (3,4,5) is the maximum value in the path Node 3 -> (3,1,3) is the maximum value in the path. <br><h4>Example 2:</h4> <br><h4>Input:</h4> root = [3,3,null,4,2] <br><h4>Output:</h4> 3 <br><h4>Explanation:</h4> Node 2 -> (3, 3, 2) is not good, because "3" is higher than it. <br><h4>Example 3:</h4> <br><h4>Input:</h4> root = [1] <br><h4>Output:</h4> 1 <br><h4>Explanation:</h4> Root is considered as good. <br><h4>Constraints:</h4> The number of nodes in the binary tree is in the range [1, 10^5]. Each node\'s value is between [-10^4, 10^4].