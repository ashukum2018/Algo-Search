Given string num representing a non-negative integer num, and an integer k, return the smallest possible integer after removing k digits from num. <br><h4>Example 1:</h4> <br><h4>Input:</h4> num = "1432219", k = 3 <br><h4>Output:</h4> "1219" <br><h4>Explanation:</h4> Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest. <br><h4>Example 2:</h4> <br><h4>Input:</h4> num = "10200", k = 1 <br><h4>Output:</h4> "200" <br><h4>Explanation:</h4> Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes. <br><h4>Example 3:</h4> <br><h4>Input:</h4> num = "10", k = 2 <br><h4>Output:</h4> "0" <br><h4>Explanation:</h4> Remove all the digits from the number and it is left with nothing which is 0. <br><h4>Constraints:</h4> 1 <= k <= num.length <= 105 num consists of only digits. num does not have any leading zeros except for the zero itself.