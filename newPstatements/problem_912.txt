Return the result of evaluating a given boolean expression, represented as a string. An expression can either be:</h4> "t", evaluating to True; "f", evaluating to False; "!(expr)", evaluating to the logical NOT of the inner expression expr; "&(expr1,expr2,...)", evaluating to the logical AND of 2 or more inner expressions expr1, expr2, ...; "|(expr1,expr2,...)", evaluating to the logical OR of 2 or more inner expressions expr1, expr2, ... <br><h4>Example 1:</h4> <br><h4>Input:</h4> expression = "!(f)" <br><h4>Output:</h4> true <br><h4>Example 2:</h4> <br><h4>Input:</h4> expression = "|(f,t)" <br><h4>Output:</h4> true <br><h4>Example 3:</h4> <br><h4>Input:</h4> expression = "&(t,f)" <br><h4>Output:</h4> false <br><h4>Constraints:</h4> 1 <= expression.length <= 2 * 104 expression[i] consists of characters in {\'(\', \')\', \'&\', \'|\', \'!\', \'t\', \'f\', \',\'}. expression is a valid expression representing a boolean, as given in the description.