You are given a string s of lowercase English letters and an integer array shifts of the same length. Call the shift() of a letter, the next letter in the alphabet, (wrapping around so that \'z\' becomes \'a\'). For example, shift(\'a\') = \'b\', shift(\'t\') = \'u\', and shift(\'z\') = \'a\'. Now for each shifts[i] = x, we want to shift the first i + 1 letters of s, x times. Return the final string after all such shifts to s are applied. <br><h4>Example 1:</h4> <br><h4>Input:</h4> s = "abc", shifts = [3,5,9] <br><h4>Output:</h4> "rpl" <br><h4>Explanation:</h4> We start with "abc". After shifting the first 1 letters of s by 3, we have "dbc". After shifting the first 2 letters of s by 5, we have "igc". After shifting the first 3 letters of s by 9, we have "rpl", the answer. <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = "aaa", shifts = [1,2,3] <br><h4>Output:</h4> "gfd" <br><h4>Constraints:</h4> 1 <= s.length <= 105 s consists of lowercase English letters. shifts.length == s.length 0 <= shifts[i] <= 109