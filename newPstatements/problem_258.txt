Given an integer array nums, return the length of the longest strictly increasing subsequence. A subsequence is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements. For example, [3,6,2,7] is a subsequence of the array [0,3,1,6,2,2,7]. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [10,9,2,5,3,7,101,18] <br><h4>Output:</h4> 4 <br><h4>Explanation:</h4> The longest increasing subsequence is [2,3,7,101], therefore the length is 4. <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [0,1,0,3,2,3] <br><h4>Output:</h4> 4 <br><h4>Example 3:</h4> <br><h4>Input:</h4> nums = [7,7,7,7,7,7,7] <br><h4>Output:</h4> 1 <br><h4>Constraints:</h4> 1 <= nums.length <= 2500 -104 <= nums[i] <= 104 Follow up:</h4> Can you come up with an algorithm that runs in O(n log(n)) time complexity?