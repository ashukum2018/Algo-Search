You are given a string s consisting only of letters \'a\' and \'b\'. In a single step you can remove one palindromic subsequence from s. Return the minimum number of steps to make the given string empty. A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous. A string is called palindrome if is one that reads the same backward as well as forward. <br><h4>Example 1:</h4> <br><h4>Input:</h4> s = "ababa" <br><h4>Output:</h4> 1 <br><h4>Explanation:</h4> s is already a palindrome, so its entirety can be removed in a single step. <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = "abb" <br><h4>Output:</h4> 2 <br><h4>Explanation:</h4> "abb" -> "bb" -> "". Remove palindromic subsequence "a" then "bb". <br><h4>Example 3:</h4> <br><h4>Input:</h4> s = "baabb" <br><h4>Output:</h4> 2 <br><h4>Explanation:</h4> "baabb" -> "b" -> "". Remove palindromic subsequence "baab" then "b". <br><h4>Constraints:</h4> 1 <= s.length <= 1000 s[i] is either \'a\' or \'b\'.