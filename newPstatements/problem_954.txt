You are given a string s and array queries where queries[i] = [lefti, righti, ki]. We may rearrange the substring s[lefti...righti] for each query and then choose up to ki of them to replace with any lowercase English letter. If the substring is possible to be a palindrome string after the operations above, the result of the query is true. Otherwise, the result is false. Return a boolean array answer where answer[i] is the result of the ith query queries[i]. Note that each letter is counted individually for replacement, so if, for example s[lefti...righti] = "aaa", and ki = 2, we can only replace two of the letters. Also, note that no query modifies the initial string s. <br><h4>Example :</h4> <br><h4>Input:</h4> s = "abcda", queries = [[3,3,0],[1,2,0],[0,3,1],[0,3,2],[0,4,1]] <br><h4>Output:</h4> [true,false,false,true,true] <br><h4>Explanation:</h4> queries[0]:</h4> substring = "d", is palidrome. queries[1]:</h4> substring = "bc", is not palidrome. queries[2]:</h4> substring = "abcd", is not palidrome after replacing only 1 character. queries[3]:</h4> substring = "abcd", could be changed to "abba" which is palidrome. Also this can be changed to "baab" first rearrange it "bacd" then replace "cd" with "ab". queries[4]:</h4> substring = "abcda", could be changed to "abcba" which is palidrome. <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = "lyb", queries = [[0,1,0],[2,2,1]] <br><h4>Output:</h4> [false,true] <br><h4>Constraints:</h4> 1 <= s.length, queries.length <= 105 0 <= lefti <= righti < s.length 0 <= ki <= s.length s consists of lowercase English letters.