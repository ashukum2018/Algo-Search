You are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. You are asked to burst all the balloons. If you burst the ith balloon, you will get nums[i - 1] * nums[i] * nums[i + 1] coins. If i - 1 or i + 1 goes out of bounds of the array, then treat it as if there is a balloon with a 1 painted on it. Return the maximum coins you can collect by bursting the balloons wisely. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [3,1,5,8] <br><h4>Output:</h4> 167 <br><h4>Explanation:</h4> nums = [3,1,5,8] --> [3,5,8] --> [3,8] --> [8] --> [] coins = 3*1*5 + 3*5*8 + 1*3*8 + 1*8*1 = 167 <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [1,5] <br><h4>Output:</h4> 10 <br><h4>Constraints:</h4> n == nums.length 1 <= n <= 300 0 <= nums[i] <= 100