Given an array of positive integers nums and a positive integer target, return the minimal length of a contiguous subarray [numsl, numsl+1, ..., numsr-1, numsr] of which the sum is greater than or equal to target. If there is no such subarray, return 0 instead. <br><h4>Example 1:</h4> <br><h4>Input:</h4> target = 7, nums = [2,3,1,2,4,3] <br><h4>Output:</h4> 2 <br><h4>Explanation:</h4> The subarray [4,3] has the minimal length under the problem constraint. <br><h4>Example 2:</h4> <br><h4>Input:</h4> target = 4, nums = [1,4,4] <br><h4>Output:</h4> 1 <br><h4>Example 3:</h4> <br><h4>Input:</h4> target = 11, nums = [1,1,1,1,1,1,1,1] <br><h4>Output:</h4> 0 <br><h4>Constraints:</h4> 1 <= target <= 109 1 <= nums.length <= 105 1 <= nums[i] <= 105 Follow up:</h4> If you have figured out the O(n) solution, try coding another solution of which the time complexity is O(n log(n)).