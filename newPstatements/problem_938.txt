You are given a string text. You should split it to k substrings (subtext1, subtext2, ..., subtextk) such that:</h4> subtexti is a non-empty string. The concatenation of all the substrings is equal to text (i.e., subtext1 + subtext2 + ... + subtextk == text). subtexti == subtextk - i + 1 for all valid values of i (i.e., 1 <= i <= k). Return the largest possible value of k. <br><h4>Example 1:</h4> <br><h4>Input:</h4> text = "ghiabcdefhelloadamhelloabcdefghi" <br><h4>Output:</h4> 7 <br><h4>Explanation:</h4> We can split the string on "(ghi)(abcdef)(hello)(adam)(hello)(abcdef)(ghi)". <br><h4>Example 2:</h4> <br><h4>Input:</h4> text = "merchant" <br><h4>Output:</h4> 1 <br><h4>Explanation:</h4> We can split the string on "(merchant)". <br><h4>Example 3:</h4> <br><h4>Input:</h4> text = "antaprezatepzapreanta" <br><h4>Output:</h4> 11 <br><h4>Explanation:</h4> We can split the string on "(a)(nt)(a)(pre)(za)(tpe)(za)(pre)(a)(nt)(a)". <br><h4>Constraints:</h4> 1 <= text.length <= 1000 text consists only of lowercase English characters.