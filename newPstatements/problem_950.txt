Let the function f(s) be the frequency of the lexicographically smallest character in a non-empty string s. For example, if s = "dcce" then f(s) = 2 because the lexicographically smallest character is \'c\', which has a frequency of 2. You are given an array of strings words and another array of query strings queries. For each query queries[i], count the number of words in words such that f(queries[i]) < f(W) for each W in words. Return an integer array answer, where each answer[i] is the answer to the ith query. <br><h4>Example 1:</h4> <br><h4>Input:</h4> queries = ["cbd"], words = ["zaaaz"] <br><h4>Output:</h4> [1] <br><h4>Explanation:</h4> On the first query we have f("cbd") = 1, f("zaaaz") = 3 so f("cbd") < f("zaaaz"). <br><h4>Example 2:</h4> <br><h4>Input:</h4> queries = ["bbb","cc"], words = ["a","aa","aaa","aaaa"] <br><h4>Output:</h4> [1,2] <br><h4>Explanation:</h4> On the first query only f("bbb") < f("aaaa"). On the second query both f("aaa") and f("aaaa") are both > f("cc"). <br><h4>Constraints:</h4> 1 <= queries.length <= 2000 1 <= words.length <= 2000 1 <= queries[i].length, words[i].length <= 10 queries[i][j], words[i][j] consist of lowercase English letters.