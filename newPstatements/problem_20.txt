Given the head of a linked list, remove the nth node from the end of the list and return its head. <br><h4>Example 1:</h4> <br><h4>Input:</h4> head = [1,2,3,4,5], n = 2 <br><h4>Output:</h4> [1,2,3,5] <br><h4>Example 2:</h4> <br><h4>Input:</h4> head = [1], n = 1 <br><h4>Output:</h4> [] <br><h4>Example 3:</h4> <br><h4>Input:</h4> head = [1,2], n = 1 <br><h4>Output:</h4> [1] <br><h4>Constraints:</h4> The number of nodes in the list is sz. 1 <= sz <= 30 0 <= Node.val <= 100 1 <= n <= sz Follow up:</h4> Could you do this in one pass?