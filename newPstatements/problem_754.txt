Given an integer array nums, partition it into two (contiguous) subarrays left and right so that:</h4> Every element in left is less than or equal to every element in right. left and right are non-empty. left has the smallest possible size. Return the length of left after such a partitioning. Test cases are generated such that partitioning exists. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [5,0,3,8,6] <br><h4>Output:</h4> 3 <br><h4>Explanation:</h4> left = [5,0,3], right = [8,6] <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [1,1,1,0,6,12] <br><h4>Output:</h4> 4 <br><h4>Explanation:</h4> left = [1,1,1,0], right = [6,12] <br><h4>Constraints:</h4> 2 <= nums.length <= 105 0 <= nums[i] <= 106 There is at least one valid answer for the given input.