You are given a license key represented as a string s that consists of only alphanumeric characters and dashes. The string is separated into n + 1 groups by n dashes. You are also given an integer k. We want to reformat the string s such that each group contains exactly k characters, except for the first group, which could be shorter than k but still must contain at least one character. Furthermore, there must be a dash inserted between two groups, and you should convert all lowercase letters to uppercase. Return the reformatted license key. <br><h4>Example 1:</h4> <br><h4>Input:</h4> s = "5F3Z-2e-9-w", k = 4 <br><h4>Output:</h4> "5F3Z-2E9W" <br><h4>Explanation:</h4> The string s has been split into two parts, each part has 4 characters. Note that the two extra dashes are not needed and can be removed. <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = "2-5g-3-J", k = 2 <br><h4>Output:</h4> "2-5G-3J" <br><h4>Explanation:</h4> The string s has been split into three parts, each part has 2 characters except the first part as it could be shorter as mentioned above. <br><h4>Constraints:</h4> 1 <= s.length <= 105 s consists of English letters, digits, and dashes \'-\'. 1 <= k <= 104