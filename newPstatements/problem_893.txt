You are given an m x n binary matrix matrix. You can choose any number of columns in the matrix and flip every cell in that column (i.e., Change the value of the cell from 0 to 1 or vice versa). Return the maximum number of rows that have all values equal after some number of flips. <br><h4>Example 1:</h4> <br><h4>Input:</h4> matrix = [[0,1],[1,1]] <br><h4>Output:</h4> 1 <br><h4>Explanation:</h4> After flipping no values, 1 row has all values equal. <br><h4>Example 2:</h4> <br><h4>Input:</h4> matrix = [[0,1],[1,0]] <br><h4>Output:</h4> 2 <br><h4>Explanation:</h4> After flipping values in the first column, both rows have equal values. <br><h4>Example 3:</h4> <br><h4>Input:</h4> matrix = [[0,0,0],[0,0,1],[1,1,0]] <br><h4>Output:</h4> 2 <br><h4>Explanation:</h4> After flipping values in the first two columns, the last two rows have equal values. <br><h4>Constraints:</h4> m == matrix.length n == matrix[i].length 1 <= m, n <= 300 matrix[i][j] is either 0 or 1.