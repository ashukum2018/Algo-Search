Given the root of a binary tree and an integer targetSum, return all root-to-leaf paths where the sum of the node values in the path equals targetSum. Each path should be returned as a list of the node values, not node references. A root-to-leaf path is a path starting from the root and ending at any leaf node. A leaf is a node with no children. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22 <br><h4>Output:</h4> [[5,4,11,2],[5,8,4,5]] <br><h4>Explanation:</h4> There are two paths whose sum equals targetSum:</h4> 5 + 4 + 11 + 2 = 22 5 + 8 + 4 + 5 = 22 <br><h4>Example 2:</h4> <br><h4>Input:</h4> root = [1,2,3], targetSum = 5 <br><h4>Output:</h4> [] <br><h4>Example 3:</h4> <br><h4>Input:</h4> root = [1,2], targetSum = 0 <br><h4>Output:</h4> [] <br><h4>Constraints:</h4> The number of nodes in the tree is in the range [0, 5000]. -1000 <= Node.val <= 1000 -1000 <= targetSum <= 1000