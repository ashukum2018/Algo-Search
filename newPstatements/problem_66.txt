A valid number can be split up into these components (in order):</h4> A decimal number or an integer. (Optional) An \'e\' or \'E\', followed by an integer. A decimal number can be split up into these components (in order):</h4> (Optional) A sign character (either \'+\' or \'-\'). One of the following formats:</h4> \t One or more digits, followed by a dot \'.\'. One or more digits, followed by a dot \'.\', followed by one or more digits. A dot \'.\', followed by one or more digits. An integer can be split up into these components (in order):</h4> (Optional) A sign character (either \'+\' or \'-\'). One or more digits. For example, all the following are valid numbers:</h4> ["2", "0089", "-0.1", "+3.14", "4.", "-.9", "2e10", "-90E3", "3e+7", "+6e-1", "53.5e93", "-123.456e789"], while the following are not valid numbers:</h4> ["abc", "1a", "1e", "e3", "99e2.5", "--6", "-+3", "95a54e53"]. Given a string s, return true if s is a valid number. <br><h4>Example 1:</h4> <br><h4>Input:</h4> s = "0" <br><h4>Output:</h4> true <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = "e" <br><h4>Output:</h4> false <br><h4>Example 3:</h4> <br><h4>Input:</h4> s = "." <br><h4>Output:</h4> false <br><h4>Constraints:</h4> 1 <= s.length <= 20 s consists of only English letters (both uppercase and lowercase), digits (0-9), plus \'+\', minus \'-\', or dot \'.\'.