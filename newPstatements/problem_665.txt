You have n jobs and m workers. You are given three arrays:</h4> difficulty, profit, and worker where:</h4> difficulty[i] and profit[i] are the difficulty and the profit of the ith job, and worker[j] is the ability of jth worker (i.e., the jth worker can only complete a job with difficulty at most worker[j]). Every worker can be assigned at most one job, but one job can be completed multiple times. For example, if three workers attempt the same job that pays $1, then the total profit will be $3. If a worker cannot complete any job, their profit is $0. Return the maximum profit we can achieve after assigning the workers to the jobs. <br><h4>Example 1:</h4> <br><h4>Input:</h4> difficulty = [2,4,6,8,10], profit = [10,20,30,40,50], worker = [4,5,6,7] <br><h4>Output:</h4> 100 <br><h4>Explanation:</h4> Workers are assigned jobs of difficulty [4,4,6,6] and they get a profit of [20,20,30,30] separately. <br><h4>Example 2:</h4> <br><h4>Input:</h4> difficulty = [85,47,57], profit = [24,66,99], worker = [40,25,25] <br><h4>Output:</h4> 0 <br><h4>Constraints:</h4> n == difficulty.length n == profit.length m == worker.length 1 <= n, m <= 104 1 <= difficulty[i], profit[i], worker[i] <= 105