Given the root of a binary tree, the depth of each node is the shortest distance to the root. Return the smallest subtree such that it contains all the deepest nodes in the original tree. A node is called the deepest if it has the largest depth possible among any node in the entire tree. The subtree of a node is a tree consisting of that node, plus the set of all descendants of that node. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root = [3,5,1,6,2,0,8,null,null,7,4] <br><h4>Output:</h4> [2,7,4] <br><h4>Explanation:</h4> We return the node with value 2, colored in yellow in the diagram. The nodes coloured in blue are the deepest nodes of the tree. Notice that nodes 5, 3 and 2 contain the deepest nodes in the tree but node 2 is the smallest subtree among them, so we return it. <br><h4>Example 2:</h4> <br><h4>Input:</h4> root = [1] <br><h4>Output:</h4> [1] <br><h4>Explanation:</h4> The root is the deepest node in the tree. <br><h4>Example 3:</h4> <br><h4>Input:</h4> root = [0,1,3,null,2] <br><h4>Output:</h4> [2] <br><h4>Explanation:</h4> The deepest node in the tree is 2, the valid subtrees are the subtrees of nodes 2, 1 and 0 but the subtree of node 2 is the smallest. <br><h4>Constraints:</h4> The number of nodes in the tree will be in the range [1, 500]. 0 <= Node.val <= 500 The values of the nodes in the tree are unique. Note:</h4> This question is the same as 1123:</h4> https:</h4>//leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/