You are given an array of intervals, where intervals[i] = [starti, endi] and each starti is unique. The right interval for an interval i is an interval j such that startj >= endi and startj is minimized. Note that i may equal j. Return an array of right interval indices for each interval i. If no right interval exists for interval i, then put -1 at index i. <br><h4>Example 1:</h4> <br><h4>Input:</h4> intervals = [[1,2]] <br><h4>Output:</h4> [-1] <br><h4>Explanation:</h4> There is only one interval in the collection, so it outputs -1. <br><h4>Example 2:</h4> <br><h4>Input:</h4> intervals = [[3,4],[2,3],[1,2]] <br><h4>Output:</h4> [-1,0,1] <br><h4>Explanation:</h4> There is no right interval for [3,4]. The right interval for [2,3] is [3,4] since start0 = 3 is the smallest start that is >= end1 = 3. The right interval for [1,2] is [2,3] since start1 = 2 is the smallest start that is >= end2 = 2. <br><h4>Example 3:</h4> <br><h4>Input:</h4> intervals = [[1,4],[2,3],[3,4]] <br><h4>Output:</h4> [-1,2,-1] <br><h4>Explanation:</h4> There is no right interval for [1,4] and [3,4]. The right interval for [2,3] is [3,4] since start2 = 3 is the smallest start that is >= end1 = 3. <br><h4>Constraints:</h4> 1 <= intervals.length <= 2 * 104 intervals[i].length == 2 -106 <= starti <= endi <= 106 The start point of each interval is unique.