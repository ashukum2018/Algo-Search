Given an array nums of size n, return the majority element. The majority element is the element that appears more than \xe2\x8c\x8an / 2\xe2\x8c\x8b times. You may assume that the majority element always exists in the array. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [3,2,3] <br><h4>Output:</h4> 3 <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [2,2,1,1,1,2,2] <br><h4>Output:</h4> 2 <br><h4>Constraints:</h4> n == nums.length 1 <= n <= 5 * 104 -109 <= nums[i] <= 109 Follow-up:</h4> Could you solve the problem in linear time and in O(1) space?