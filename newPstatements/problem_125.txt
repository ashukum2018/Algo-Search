A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence at most once. Note that the path does not need to pass through the root. The path sum of a path is the sum of the node's values in the path. Given the root of a binary tree, return the maximum path sum of any non-empty path. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root = [1,2,3] <br><h4>Output:</h4> 6 <br><h4>Explanation:</h4> The optimal path is 2 -> 1 -> 3 with a path sum of 2 + 1 + 3 = 6. <br><h4>Example 2:</h4> <br><h4>Input:</h4> root = [-10,9,20,null,null,15,7] <br><h4>Output:</h4> 42 <br><h4>Explanation:</h4> The optimal path is 15 -> 20 -> 7 with a path sum of 15 + 20 + 7 = 42. <br><h4>Constraints:</h4> The number of nodes in the tree is in the range [1, 3 * 104]. -1000 <= Node.val <= 1000