For a binary tree T, we can define a flip operation as follows:</h4> choose any node, and swap the left and right child subtrees. A binary tree X is flip equivalent to a binary tree Y if and only if we can make X equal to Y after some number of flip operations. Given the roots of two binary trees root1 and root2, return true if the two trees are flip equivalent or false otherwise. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root1 = [1,2,3,4,5,6,null,null,null,7,8], root2 = [1,3,2,null,6,4,5,null,null,null,null,8,7] <br><h4>Output:</h4> true <br><h4>Explanation:</h4> We flipped at nodes with values 1, 3, and 5. <br><h4>Example 2:</h4> <br><h4>Input:</h4> root1 = [], root2 = [] <br><h4>Output:</h4> true <br><h4>Example 3:</h4> <br><h4>Input:</h4> root1 = [], root2 = [1] <br><h4>Output:</h4> false <br><h4>Constraints:</h4> The number of nodes in each tree is in the range [0, 100]. Each tree will have unique node values in the range [0, 99].