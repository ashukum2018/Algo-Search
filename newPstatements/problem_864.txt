Given the root of a binary tree, find the maximum value v for which there exist different nodes a and b where v = |a.val - b.val| and a is an ancestor of b. A node a is an ancestor of b if either:</h4> any child of a is equal to b or any child of a is an ancestor of b. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root = [8,3,10,1,6,null,14,null,null,4,7,13] <br><h4>Output:</h4> 7 <br><h4>Explanation:</h4> We have various ancestor-node differences, some of which are given below :</h4> |8 - 3| = 5 |3 - 7| = 4 |8 - 1| = 7 |10 - 13| = 3 Among all possible differences, the maximum value of 7 is obtained by |8 - 1| = 7. <br><h4>Example 2:</h4> <br><h4>Input:</h4> root = [1,null,2,null,0,3] <br><h4>Output:</h4> 3 <br><h4>Constraints:</h4> The number of nodes in the tree is in the range [2, 5000]. 0 <= Node.val <= 105