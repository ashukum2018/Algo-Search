Given the root of a binary tree, return the lowest common ancestor of its deepest leaves. Recall that:</h4> The node of a binary tree is a leaf if and only if it has no children The depth of the root of the tree is 0. if the depth of a node is d, the depth of each of its children is d + 1. The lowest common ancestor of a set S of nodes, is the node A with the largest depth such that every node in S is in the subtree with root A. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root = [3,5,1,6,2,0,8,null,null,7,4] <br><h4>Output:</h4> [2,7,4] <br><h4>Explanation:</h4> We return the node with value 2, colored in yellow in the diagram. The nodes coloured in blue are the deepest leaf-nodes of the tree. Note that nodes 6, 0, and 8 are also leaf nodes, but the depth of them is 2, but the depth of nodes 7 and 4 is 3. <br><h4>Example 2:</h4> <br><h4>Input:</h4> root = [1] <br><h4>Output:</h4> [1] <br><h4>Explanation:</h4> The root is the deepest node in the tree, and it's the lca of itself. <br><h4>Example 3:</h4> <br><h4>Input:</h4> root = [0,1,3,null,2] <br><h4>Output:</h4> [2] <br><h4>Explanation:</h4> The deepest leaf node in the tree is 2, the lca of one node is itself. <br><h4>Constraints:</h4> The number of nodes in the tree will be in the range [1, 1000]. 0 <= Node.val <= 1000 The values of the nodes in the tree are unique. Note:</h4> This question is the same as 865:</h4> https:</h4>//leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/