Given an n x n integer matrix grid, return the minimum sum of a falling path with non-zero shifts. A falling path with non-zero shifts is a choice of exactly one element from each row of grid such that no two elements chosen in adjacent rows are in the same column. <br><h4>Example 1:</h4> <br><h4>Input:</h4> arr = [[1,2,3],[4,5,6],[7,8,9]] <br><h4>Output:</h4> 13 <br><h4>Explanation:</h4> The possible falling paths are:</h4> [1,5,9], [1,5,7], [1,6,7], [1,6,8], [2,4,8], [2,4,9], [2,6,7], [2,6,8], [3,4,8], [3,4,9], [3,5,7], [3,5,9] The falling path with the smallest sum is [1,5,7], so the answer is 13. <br><h4>Example 2:</h4> <br><h4>Input:</h4> grid = [[7]] <br><h4>Output:</h4> 7 <br><h4>Constraints:</h4> n == grid.length == grid[i].length 1 <= n <= 200 -99 <= grid[i][j] <= 99