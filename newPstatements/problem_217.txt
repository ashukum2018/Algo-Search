Given a string s representing a valid expression, implement a basic calculator to evaluate it, and return the result of the evaluation. Note:</h4> You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as eval(). <br><h4>Example 1:</h4> <br><h4>Input:</h4> s = "1 + 1" <br><h4>Output:</h4> 2 <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = " 2-1 + 2 " <br><h4>Output:</h4> 3 <br><h4>Example 3:</h4> <br><h4>Input:</h4> s = "(1+(4+5+2)-3)+(6+8)" <br><h4>Output:</h4> 23 <br><h4>Constraints:</h4> 1 <= s.length <= 3 * 105 s consists of digits, \'+\', \'-\', \'(\', \')\', and \' \'. s represents a valid expression. \'+\' is not used as a unary operation (i.e., "+1" and "+(2 + 3)" is invalid). \'-\' could be used as a unary operation (i.e., "-1" and "-(2 + 3)" is valid). There will be no two consecutive operators in the input. Every number and running calculation will fit in a signed 32-bit integer.