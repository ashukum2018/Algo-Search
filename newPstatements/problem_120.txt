Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle. In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:</h4> <br><h4>Example 1:</h4> <br><h4>Input:</h4> rowIndex = 3 <br><h4>Output:</h4> [1,3,3,1] <br><h4>Example 2:</h4> <br><h4>Input:</h4> rowIndex = 0 <br><h4>Output:</h4> [1] <br><h4>Example 3:</h4> <br><h4>Input:</h4> rowIndex = 1 <br><h4>Output:</h4> [1,1] <br><h4>Constraints:</h4> 0 <= rowIndex <= 33 Follow up:</h4> Could you optimize your algorithm to use only O(rowIndex) extra space?