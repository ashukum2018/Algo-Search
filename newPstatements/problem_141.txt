Given a string s and a dictionary of strings wordDict, add spaces in s to construct a sentence where each word is a valid dictionary word. Return all such possible sentences in any order. Note that the same word in the dictionary may be reused multiple times in the segmentation. <br><h4>Example 1:</h4> <br><h4>Input:</h4> s = "catsanddog", wordDict = ["cat","cats","and","sand","dog"] <br><h4>Output:</h4> ["cats and dog","cat sand dog"] <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = "pineapplepenapple", wordDict = ["apple","pen","applepen","pine","pineapple"] <br><h4>Output:</h4> ["pine apple pen apple","pineapple pen apple","pine applepen apple"] <br><h4>Explanation:</h4> Note that you are allowed to reuse a dictionary word. <br><h4>Example 3:</h4> <br><h4>Input:</h4> s = "catsandog", wordDict = ["cats","dog","sand","and","cat"] <br><h4>Output:</h4> [] <br><h4>Constraints:</h4> 1 <= s.length <= 20 1 <= wordDict.length <= 1000 1 <= wordDict[i].length <= 10 s and wordDict[i] consist of only lowercase English letters. All the strings of wordDict are unique.