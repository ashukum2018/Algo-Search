Given an integer array arr, return the length of a maximum size turbulent subarray of arr. A subarray is turbulent if the comparison sign flips between each adjacent pair of elements in the subarray. More formally, a subarray [arr[i], arr[i + 1], ..., arr[j]] of arr is said to be turbulent if and only if:</h4> For i <= k < j:</h4> \t arr[k] > arr[k + 1] when k is odd, and arr[k] < arr[k + 1] when k is even. Or, for i <= k < j:</h4> \t arr[k] > arr[k + 1] when k is even, and arr[k] < arr[k + 1] when k is odd. <br><h4>Example 1:</h4> <br><h4>Input:</h4> arr = [9,4,2,10,7,8,8,1,9] <br><h4>Output:</h4> 5 <br><h4>Explanation:</h4> arr[1] > arr[2] < arr[3] > arr[4] < arr[5] <br><h4>Example 2:</h4> <br><h4>Input:</h4> arr = [4,8,12,16] <br><h4>Output:</h4> 2 <br><h4>Example 3:</h4> <br><h4>Input:</h4> arr = [100] <br><h4>Output:</h4> 1 <br><h4>Constraints:</h4> 1 <= arr.length <= 4 * 104 0 <= arr[i] <= 109