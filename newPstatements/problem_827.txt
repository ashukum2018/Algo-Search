You are given the root of a binary tree where each node has a value in the range [0, 25] representing the letters \'a\' to \'z\'. Return the lexicographically smallest string that starts at a leaf of this tree and ends at the root. As a reminder, any shorter prefix of a string is lexicographically smaller. For example, "ab" is lexicographically smaller than "aba". A leaf of a node is a node that has no children. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root = [0,1,2,3,4,3,4] <br><h4>Output:</h4> "dba" <br><h4>Example 2:</h4> <br><h4>Input:</h4> root = [25,1,3,1,3,0,2] <br><h4>Output:</h4> "adz" <br><h4>Example 3:</h4> <br><h4>Input:</h4> root = [2,2,1,null,1,0,null,0] <br><h4>Output:</h4> "abc" <br><h4>Constraints:</h4> The number of nodes in the tree is in the range [1, 8500]. 0 <= Node.val <= 25