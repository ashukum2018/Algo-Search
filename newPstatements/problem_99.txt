Given the root of a binary tree, determine if it is a valid binary search tree (BST). A valid BST is defined as follows:</h4> The left subtree of a node contains only nodes with keys less than the node's key. The right subtree of a node contains only nodes with keys greater than the node's key. Both the left and right subtrees must also be binary search trees. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root = [2,1,3] <br><h4>Output:</h4> true <br><h4>Example 2:</h4> <br><h4>Input:</h4> root = [5,1,4,null,null,3,6] <br><h4>Output:</h4> false <br><h4>Explanation:</h4> The root node's value is 5 but its right child's value is 4. <br><h4>Constraints:</h4> The number of nodes in the tree is in the range [1, 104]. -231 <= Node.val <= 231 - 1