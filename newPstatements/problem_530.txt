Given the root of a binary search tree and the lowest and highest boundaries as low and high, trim the tree so that all its elements lies in [low, high]. Trimming the tree should not change the relative structure of the elements that will remain in the tree (i.e., any node's descendant should remain a descendant). It can be proven that there is a unique answer. Return the root of the trimmed binary search tree. Note that the root may change depending on the given bounds. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root = [1,0,2], low = 1, high = 2 <br><h4>Output:</h4> [1,null,2] <br><h4>Example 2:</h4> <br><h4>Input:</h4> root = [3,0,4,null,2,null,null,1], low = 1, high = 3 <br><h4>Output:</h4> [3,2,null,1] <br><h4>Constraints:</h4> The number of nodes in the tree is in the range [1, 104]. 0 <= Node.val <= 104 The value of each node in the tree is unique. root is guaranteed to be a valid binary search tree. 0 <= low <= high <= 104