A valid encoding of an array of words is any reference string s and array of indices indices such that:</h4> words.length == indices.length The reference string s ends with the \'#\' character. For each index indices[i], the substring of s starting from indices[i] and up to (but not including) the next \'#\' character is equal to words[i]. Given an array of words, return the length of the shortest reference string s possible of any valid encoding of words. <br><h4>Example 1:</h4> <br><h4>Input:</h4> words = ["time", "me", "bell"] <br><h4>Output:</h4> 10 <br><h4>Explanation:</h4> A valid encoding would be s = "time#bell#" and indices = [0, 2, 5]. words[0] = "time", the substring of s starting from indices[0] = 0 to the next \'#\' is underlined in "time#bell#" words[1] = "me", the substring of s starting from indices[1] = 2 to the next \'#\' is underlined in "time#bell#" words[2] = "bell", the substring of s starting from indices[2] = 5 to the next \'#\' is underlined in "time#bell#" <br><h4>Example 2:</h4> <br><h4>Input:</h4> words = ["t"] <br><h4>Output:</h4> 2 <br><h4>Explanation:</h4> A valid encoding would be s = "t#" and indices = [0]. <br><h4>Constraints:</h4> 1 <= words.length <= 2000 1 <= words[i].length <= 7 words[i] consists of only lowercase letters.