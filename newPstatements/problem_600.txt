There is a safe protected by a password. The password is a sequence of n digits where each digit can be in the range [0, k - 1]. The safe has a peculiar way of checking the password. When you enter in a sequence, it checks the most recent n digits that were entered each time you type a digit. For example, the correct password is "345" and you enter in "012345":</h4> \t After typing 0, the most recent 3 digits is "0", which is incorrect. After typing 1, the most recent 3 digits is "01", which is incorrect. After typing 2, the most recent 3 digits is "012", which is incorrect. After typing 3, the most recent 3 digits is "123", which is incorrect. After typing 4, the most recent 3 digits is "234", which is incorrect. After typing 5, the most recent 3 digits is "345", which is correct and the safe unlocks. Return any string of minimum length that will unlock the safe at some point of entering it. <br><h4>Example 1:</h4> <br><h4>Input:</h4> n = 1, k = 2 <br><h4>Output:</h4> "10" <br><h4>Explanation:</h4> The password is a single digit, so enter each digit. "01" would also unlock the safe. <br><h4>Example 2:</h4> <br><h4>Input:</h4> n = 2, k = 2 <br><h4>Output:</h4> "01100" <br><h4>Explanation:</h4> For each possible password:</h4> - "00" is typed in starting from the 4th digit. - "01" is typed in starting from the 1st digit. - "10" is typed in starting from the 3rd digit. - "11" is typed in starting from the 2nd digit. Thus "01100" will unlock the safe. "01100", "10011", and "11001" would also unlock the safe. <br><h4>Constraints:</h4> 1 <= n <= 4 1 <= k <= 10 1 <= kn <= 4096