You are given two integers n and k and two integer arrays speed and efficiency both of length n. There are n engineers numbered from 1 to n. speed[i] and efficiency[i] represent the speed and efficiency of the ith engineer respectively. Choose at most k different engineers out of the n engineers to form a team with the maximum performance. The performance of a team is the sum of their engineers' speeds multiplied by the minimum efficiency among their engineers. Return the maximum performance of this team. Since the answer can be a huge number, return it modulo 109 + 7. <br><h4>Example 1:</h4> <br><h4>Input:</h4> n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 2 <br><h4>Output:</h4> 60 <br><h4>Explanation:</h4> We have the maximum performance of the team by selecting engineer 2 (with speed=10 and efficiency=4) and engineer 5 (with speed=5 and efficiency=7). That is, performance = (10 + 5) * min(4, 7) = 60. <br><h4>Example 2:</h4> <br><h4>Input:</h4> n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 3 <br><h4>Output:</h4> 68 <br><h4>Explanation:</h4> This is the same example as the first but k = 3. We can select engineer 1, engineer 2 and engineer 5 to get the maximum performance of the team. That is, performance = (2 + 10 + 5) * min(5, 4, 7) = 68. <br><h4>Example 3:</h4> <br><h4>Input:</h4> n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 4 <br><h4>Output:</h4> 72 <br><h4>Constraints:</h4> 1 <= k <= n <= 105 speed.length == n efficiency.length == n 1 <= speed[i] <= 105 1 <= efficiency[i] <= 108