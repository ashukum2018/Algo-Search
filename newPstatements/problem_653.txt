Given the root of a binary tree, return the same tree where every subtree (of the given tree) not containing a 1 has been removed. A subtree of a node node is node plus every node that is a descendant of node. <br><h4>Example 1:</h4> <br><h4>Input:</h4> root = [1,null,0,0,1] <br><h4>Output:</h4> [1,null,0,null,1] <br><h4>Explanation:</h4> Only the red nodes satisfy the property "every subtree not containing a 1". The diagram on the right represents the answer. <br><h4>Example 2:</h4> <br><h4>Input:</h4> root = [1,0,1,0,0,0,1] <br><h4>Output:</h4> [1,null,1,null,1] <br><h4>Example 3:</h4> <br><h4>Input:</h4> root = [1,1,0,1,1,0,1,0] <br><h4>Output:</h4> [1,1,0,1,1,null,1] <br><h4>Constraints:</h4> The number of nodes in the tree is in the range [1, 200]. Node.val is either 0 or 1.