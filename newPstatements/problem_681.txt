You are given a string of digits num, such as "123456579". We can split it into a Fibonacci-like sequence [123, 456, 579]. Formally, a Fibonacci-like sequence is a list f of non-negative integers such that:</h4> 0 <= f[i] < 231, (that is, each integer fits in a 32-bit signed integer type), f.length >= 3, and f[i] + f[i + 1] == f[i + 2] for all 0 <= i < f.length - 2. Note that when splitting the string into pieces, each piece must not have extra leading zeroes, except if the piece is the number 0 itself. Return any Fibonacci-like sequence split from num, or return [] if it cannot be done. <br><h4>Example 1:</h4> <br><h4>Input:</h4> num = "1101111" <br><h4>Output:</h4> [11,0,11,11] <br><h4>Explanation:</h4> The output [110, 1, 111] would also be accepted. <br><h4>Example 2:</h4> <br><h4>Input:</h4> num = "112358130" <br><h4>Output:</h4> [] <br><h4>Explanation:</h4> The task is impossible. <br><h4>Example 3:</h4> <br><h4>Input:</h4> num = "0123" <br><h4>Output:</h4> [] <br><h4>Explanation:</h4> Leading zeroes are not allowed, so "01", "2", "3" is not valid. <br><h4>Constraints:</h4> 1 <= num.length <= 200 num contains only digits.