You are standing at position 0 on an infinite number line. There is a destination at position target. You can make some number of moves numMoves so that:</h4> On each move, you can either go left or right. During the ith move (starting from i == 1 to i == numMoves), you take i steps in the chosen direction. Given the integer target, return the minimum number of moves required (i.e., the minimum numMoves) to reach the destination. <br><h4>Example 1:</h4> <br><h4>Input:</h4> target = 2 <br><h4>Output:</h4> 3 <br><h4>Explanation:</h4> On the 1st move, we step from 0 to 1 (1 step). On the 2nd move, we step from 1 to -1 (2 steps). On the 3rd move, we step from -1 to 2 (3 steps). <br><h4>Example 2:</h4> <br><h4>Input:</h4> target = 3 <br><h4>Output:</h4> 2 <br><h4>Explanation:</h4> On the 1st move, we step from 0 to 1 (1 step). On the 2nd move, we step from 1 to 3 (2 steps). <br><h4>Constraints:</h4> -109 <= target <= 109 target != 0