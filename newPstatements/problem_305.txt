You are given two integer arrays nums1 and nums2 sorted in ascending order and an integer k. Define a pair (u, v) which consists of one element from the first array and one element from the second array. Return the k pairs (u1, v1), (u2, v2), ..., (uk, vk) with the smallest sums. <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums1 = [1,7,11], nums2 = [2,4,6], k = 3 <br><h4>Output:</h4> [[1,2],[1,4],[1,6]] <br><h4>Explanation:</h4> The first 3 pairs are returned from the sequence:</h4> [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6] <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums1 = [1,1,2], nums2 = [1,2,3], k = 2 <br><h4>Output:</h4> [[1,1],[1,1]] <br><h4>Explanation:</h4> The first 2 pairs are returned from the sequence:</h4> [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3] <br><h4>Example 3:</h4> <br><h4>Input:</h4> nums1 = [1,2], nums2 = [3], k = 3 <br><h4>Output:</h4> [[1,3],[2,3]] <br><h4>Explanation:</h4> All possible pairs are returned from the sequence:</h4> [1,3],[2,3] <br><h4>Constraints:</h4> 1 <= nums1.length, nums2.length <= 105 -109 <= nums1[i], nums2[i] <= 109 nums1 and nums2 both are sorted in ascending order. 1 <= k <= 104