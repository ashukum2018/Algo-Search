You are given a string s and an integer k, a k duplicate removal consists of choosing k adjacent and equal letters from s and removing them, causing the left and the right side of the deleted substring to concatenate together. We repeatedly make k duplicate removals on s until we no longer can. Return the final string after all such duplicate removals have been made. It is guaranteed that the answer is unique. <br><h4>Example 1:</h4> <br><h4>Input:</h4> s = "abcd", k = 2 <br><h4>Output:</h4> "abcd" <br><h4>Explanation:</h4> There\'s nothing to delete. <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = "deeedbbcccbdaa", k = 3 <br><h4>Output:</h4> "aa" <br><h4>Explanation:</h4> First delete "eee" and "ccc", get "ddbbbdaa" Then delete "bbb", get "dddaa" Finally delete "ddd", get "aa" <br><h4>Example 3:</h4> <br><h4>Input:</h4> s = "pbbcggttciiippooaais", k = 2 <br><h4>Output:</h4> "ps" <br><h4>Constraints:</h4> 1 <= s.length <= 105 2 <= k <= 104 s only contains lower case English letters.