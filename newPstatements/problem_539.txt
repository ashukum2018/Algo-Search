Given a string s containing only three types of characters:</h4> \'(\', \')\' and \'*\', return true if s is valid. The following rules define a valid string:</h4> Any left parenthesis \'(\' must have a corresponding right parenthesis \')\'. Any right parenthesis \')\' must have a corresponding left parenthesis \'(\'. Left parenthesis \'(\' must go before the corresponding right parenthesis \')\'. \'*\' could be treated as a single right parenthesis \')\' or a single left parenthesis \'(\' or an empty string "". <br><h4>Example 1:</h4> <br><h4>Input:</h4> s = "()" <br><h4>Output:</h4> true <br><h4>Example 2:</h4> <br><h4>Input:</h4> s = "(*)" <br><h4>Output:</h4> true <br><h4>Example 3:</h4> <br><h4>Input:</h4> s = "(*))" <br><h4>Output:</h4> true <br><h4>Constraints:</h4> 1 <= s.length <= 100 s[i] is \'(\', \')\' or \'*\'.