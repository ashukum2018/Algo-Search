You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself. <br><h4>Example 1:</h4> <br><h4>Input:</h4> l1 = [7,2,4,3], l2 = [5,6,4] <br><h4>Output:</h4> [7,8,0,7] <br><h4>Example 2:</h4> <br><h4>Input:</h4> l1 = [2,4,3], l2 = [5,6,4] <br><h4>Output:</h4> [8,0,7] <br><h4>Example 3:</h4> <br><h4>Input:</h4> l1 = [0], l2 = [0] <br><h4>Output:</h4> [0] <br><h4>Constraints:</h4> The number of nodes in each linked list is in the range [1, 100]. 0 <= Node.val <= 9 It is guaranteed that the list represents a number that does not have leading zeros. Follow up:</h4> Could you solve it without reversing the input lists?