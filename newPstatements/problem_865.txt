Given an array nums of integers, return the length of the longest arithmetic subsequence in nums. Recall that a subsequence of an array nums is a list nums[i1], nums[i2], ..., nums[ik] with 0 <= i1 < i2 < ... < ik <= nums.length - 1, and that a sequence seq is arithmetic if seq[i+1] - seq[i] are all the same value (for 0 <= i < seq.length - 1). <br><h4>Example 1:</h4> <br><h4>Input:</h4> nums = [3,6,9,12] <br><h4>Output:</h4> 4 <br><h4>Explanation:</h4> The whole array is an arithmetic sequence with steps of length = 3. <br><h4>Example 2:</h4> <br><h4>Input:</h4> nums = [9,4,7,2,10] <br><h4>Output:</h4> 3 <br><h4>Explanation:</h4> The longest arithmetic subsequence is [4,7,10]. <br><h4>Example 3:</h4> <br><h4>Input:</h4> nums = [20,1,15,3,10,5,8] <br><h4>Output:</h4> 4 <br><h4>Explanation:</h4> The longest arithmetic subsequence is [20,15,10,5]. <br><h4>Constraints:</h4> 2 <= nums.length <= 1000 0 <= nums[i] <= 500